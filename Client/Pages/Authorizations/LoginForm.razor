@page "/login"

@inject HttpClient httpClient
@inject ILoginService loginService
@inject NavigationManager navigationManager

@layout EmptyLayout

<style @scope>
    .login {
        background-color: #f5f5f5;
        border-radius: 2px;
        box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);
        display: block;
        height: 60%;
        margin: 0 auto;
        padding: 20px;
        width: 60%;
    }
</style>

<aside class="login">
    <h3>Iniciar sesi√≥n</h3>

    <EditForm Model="@User" OnValidSubmit="SubmitForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <aside class="mb-3">
            <label for="username" class="form-label">Usuario</label>
            <input autocomplete="off" type="text" class="form-control" id="username" @bind="User.Username" />
        </aside>
        <aside class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input autocomplete="off" type="password" class="form-control" id="password" @bind="User.Password" />
        </aside>

        <button type="submit" class="btn btn-sm btn-success">Enviar</button>

    </EditForm>
</aside>

@code {
    private UserInfo User = new UserInfo();

    private async Task SubmitForm()
    {
        var response = await httpClient.PostAsJsonAsync("api/users/login", User);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();

            await loginService.Login(token);

            navigationManager.NavigateTo("/dashboard");
        }
    }
}
